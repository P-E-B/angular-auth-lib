export var AUTH_ACTIONS_TYPE;
(function (AUTH_ACTIONS_TYPE) {
    AUTH_ACTIONS_TYPE["OPEN_SIGN_UP_DIALOG"] = "[Auth] User wants to sign up";
    AUTH_ACTIONS_TYPE["SIGN_UP"] = "[Auth] User tries to sign up";
    AUTH_ACTIONS_TYPE["SIGN_UP_SUCCESS"] = "[Auth] Sign up success";
    AUTH_ACTIONS_TYPE["SIGN_UP_FAILURE"] = "[Auth] Sign up failure";
    AUTH_ACTIONS_TYPE["LOG_IN"] = "[Auth] User tries to log in";
    AUTH_ACTIONS_TYPE["LOG_IN_SUCCESS"] = "[Auth] Log in success";
    AUTH_ACTIONS_TYPE["LOG_IN_FAILURE"] = "[Auth] Log in failure";
    AUTH_ACTIONS_TYPE["LOG_OUT"] = "[Auth] User logs out";
    AUTH_ACTIONS_TYPE["LOAD_USER_INFORMATION"] = "[Auth] Loading of user information";
    AUTH_ACTIONS_TYPE["LOAD_USER_INFORMATION_SUCCESS"] = "[Auth] Loading of user information success";
    AUTH_ACTIONS_TYPE["LOAD_USER_INFORMATION_FAILURE"] = "[Auth] Loading of user information failure";
    AUTH_ACTIONS_TYPE["CHANGE_PASSWORD"] = "[Auth] User changes his password";
    AUTH_ACTIONS_TYPE["CHANGE_PASSWORD_SUCCESS"] = "[Auth] Password change success";
    AUTH_ACTIONS_TYPE["CHANGE_PASSWORD_FAILURE"] = "[Auth] Password change failure";
    AUTH_ACTIONS_TYPE["OPEN_FORGOTTEN_PASSWORD_DIALOG"] = "[Auth] User opens dialog for password resetting";
    AUTH_ACTIONS_TYPE["SEND_PASSWORD"] = "[Auth] User has asked for having back a new password";
    AUTH_ACTIONS_TYPE["SEND_PASSWORD_SUCCESS"] = "[Auth] User has received his password";
    AUTH_ACTIONS_TYPE["SEND_PASSWORD_FAILURE"] = "[Auth] Error in the process of sending the password to the user";
    AUTH_ACTIONS_TYPE["UPDATE_USER"] = "[Auth] Update of user";
})(AUTH_ACTIONS_TYPE || (AUTH_ACTIONS_TYPE = {}));
var OpenSignUpDialog = /** @class */ (function () {
    function OpenSignUpDialog() {
        this.type = AUTH_ACTIONS_TYPE.OPEN_SIGN_UP_DIALOG;
    }
    return OpenSignUpDialog;
}());
export { OpenSignUpDialog };
var SignUp = /** @class */ (function () {
    function SignUp(payload) {
        this.payload = payload;
        this.type = AUTH_ACTIONS_TYPE.SIGN_UP;
    }
    return SignUp;
}());
export { SignUp };
var SignUpSuccess = /** @class */ (function () {
    function SignUpSuccess() {
        this.type = AUTH_ACTIONS_TYPE.SIGN_UP_SUCCESS;
    }
    return SignUpSuccess;
}());
export { SignUpSuccess };
var SignUpFailure = /** @class */ (function () {
    function SignUpFailure(payload) {
        this.payload = payload;
        this.type = AUTH_ACTIONS_TYPE.SIGN_UP_FAILURE;
    }
    return SignUpFailure;
}());
export { SignUpFailure };
var LogIn = /** @class */ (function () {
    function LogIn(payload) {
        this.payload = payload;
        this.type = AUTH_ACTIONS_TYPE.LOG_IN;
    }
    return LogIn;
}());
export { LogIn };
var LogInSuccess = /** @class */ (function () {
    function LogInSuccess(payload) {
        this.payload = payload;
        this.type = AUTH_ACTIONS_TYPE.LOG_IN_SUCCESS;
    }
    return LogInSuccess;
}());
export { LogInSuccess };
var LogInFailure = /** @class */ (function () {
    function LogInFailure(payload) {
        this.payload = payload;
        this.type = AUTH_ACTIONS_TYPE.LOG_IN_FAILURE;
    }
    return LogInFailure;
}());
export { LogInFailure };
var LogOut = /** @class */ (function () {
    function LogOut() {
        this.type = AUTH_ACTIONS_TYPE.LOG_OUT;
    }
    return LogOut;
}());
export { LogOut };
var LoadUserInformation = /** @class */ (function () {
    function LoadUserInformation() {
        this.type = AUTH_ACTIONS_TYPE.LOAD_USER_INFORMATION;
    }
    return LoadUserInformation;
}());
export { LoadUserInformation };
var LoadUserInformationSuccess = /** @class */ (function () {
    function LoadUserInformationSuccess(payload) {
        this.payload = payload;
        this.type = AUTH_ACTIONS_TYPE.LOAD_USER_INFORMATION_SUCCESS;
    }
    return LoadUserInformationSuccess;
}());
export { LoadUserInformationSuccess };
var LoadUserInformationFailure = /** @class */ (function () {
    function LoadUserInformationFailure(payload) {
        this.payload = payload;
        this.type = AUTH_ACTIONS_TYPE.LOAD_USER_INFORMATION_FAILURE;
    }
    return LoadUserInformationFailure;
}());
export { LoadUserInformationFailure };
var ChangePassword = /** @class */ (function () {
    function ChangePassword(payload) {
        this.payload = payload;
        this.type = AUTH_ACTIONS_TYPE.CHANGE_PASSWORD;
    }
    return ChangePassword;
}());
export { ChangePassword };
var ChangePasswordSuccess = /** @class */ (function () {
    function ChangePasswordSuccess() {
        this.type = AUTH_ACTIONS_TYPE.CHANGE_PASSWORD_SUCCESS;
    }
    return ChangePasswordSuccess;
}());
export { ChangePasswordSuccess };
var ChangePasswordFailure = /** @class */ (function () {
    function ChangePasswordFailure(payload) {
        this.payload = payload;
        this.type = AUTH_ACTIONS_TYPE.CHANGE_PASSWORD_FAILURE;
    }
    return ChangePasswordFailure;
}());
export { ChangePasswordFailure };
var OpenForgottenPasswordDialog = /** @class */ (function () {
    function OpenForgottenPasswordDialog() {
        this.type = AUTH_ACTIONS_TYPE.OPEN_FORGOTTEN_PASSWORD_DIALOG;
    }
    return OpenForgottenPasswordDialog;
}());
export { OpenForgottenPasswordDialog };
var SendPassword = /** @class */ (function () {
    function SendPassword(payload) {
        this.payload = payload;
        this.type = AUTH_ACTIONS_TYPE.SEND_PASSWORD;
    }
    return SendPassword;
}());
export { SendPassword };
var SendPasswordSuccess = /** @class */ (function () {
    function SendPasswordSuccess() {
        this.type = AUTH_ACTIONS_TYPE.SEND_PASSWORD_SUCCESS;
    }
    return SendPasswordSuccess;
}());
export { SendPasswordSuccess };
var SendPasswordFailure = /** @class */ (function () {
    function SendPasswordFailure(payload) {
        this.payload = payload;
        this.type = AUTH_ACTIONS_TYPE.SEND_PASSWORD_FAILURE;
    }
    return SendPasswordFailure;
}());
export { SendPasswordFailure };
var UpdateUser = /** @class */ (function () {
    function UpdateUser(payload) {
        this.payload = payload;
        this.type = AUTH_ACTIONS_TYPE.UPDATE_USER;
    }
    return UpdateUser;
}());
export { UpdateUser };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItYXV0aC1saWIvIiwic291cmNlcyI6WyJzdG9yZS9hY3Rpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUlBLE1BQU0sQ0FBTixJQUFZLGlCQTBCWDtBQTFCRCxXQUFZLGlCQUFpQjtJQUN6Qix5RUFBb0QsQ0FBQTtJQUNwRCw2REFBd0MsQ0FBQTtJQUN4QywrREFBMEMsQ0FBQTtJQUMxQywrREFBMEMsQ0FBQTtJQUUxQywyREFBc0MsQ0FBQTtJQUN0Qyw2REFBd0MsQ0FBQTtJQUN4Qyw2REFBd0MsQ0FBQTtJQUV4QyxxREFBZ0MsQ0FBQTtJQUVoQyxpRkFBNEQsQ0FBQTtJQUM1RCxpR0FBNEUsQ0FBQTtJQUM1RSxpR0FBNEUsQ0FBQTtJQUU1RSx5RUFBb0QsQ0FBQTtJQUNwRCwrRUFBMEQsQ0FBQTtJQUMxRCwrRUFBMEQsQ0FBQTtJQUUxRCx1R0FBa0YsQ0FBQTtJQUNsRiwyRkFBc0UsQ0FBQTtJQUN0RSxvRkFBK0QsQ0FBQTtJQUMvRCw4R0FBeUYsQ0FBQTtJQUV6RiwwREFBcUMsQ0FBQTtBQUN6QyxDQUFDLEVBMUJXLGlCQUFpQixLQUFqQixpQkFBaUIsUUEwQjVCO0FBRUQ7SUFBQTtRQUNhLFNBQUksR0FBRyxpQkFBaUIsQ0FBQyxtQkFBbUIsQ0FBQztJQUMxRCxDQUFDO0lBQUQsdUJBQUM7QUFBRCxDQUFDLEFBRkQsSUFFQzs7QUFFRDtJQUVJLGdCQUFtQixPQUFzQjtRQUF0QixZQUFPLEdBQVAsT0FBTyxDQUFlO1FBRGhDLFNBQUksR0FBRyxpQkFBaUIsQ0FBQyxPQUFPLENBQUM7SUFDRSxDQUFDO0lBQ2pELGFBQUM7QUFBRCxDQUFDLEFBSEQsSUFHQzs7QUFFRDtJQUFBO1FBQ2EsU0FBSSxHQUFHLGlCQUFpQixDQUFDLGVBQWUsQ0FBQztJQUN0RCxDQUFDO0lBQUQsb0JBQUM7QUFBRCxDQUFDLEFBRkQsSUFFQzs7QUFFRDtJQUVJLHVCQUFtQixPQUEwQjtRQUExQixZQUFP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aUJBQWlCLENBQUMsV0FBVyxDQUFDO0lBQ0YsQ0FBQztJQUNqRCxpQkFBQztBQUFELENBQUMsQUFIRCxJQUdDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWN0aW9uIH0gZnJvbSAnQG5ncngvc3RvcmUnO1xuaW1wb3J0IHsgSHR0cEVycm9yUmVzcG9uc2UgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5pbXBvcnQgeyBVc2VyIH0gZnJvbSAnLi4vbW9kZWxzL3VzZXIubW9kZWxzJztcblxuZXhwb3J0IGVudW0gQVVUSF9BQ1RJT05TX1RZUEUge1xuICAgIE9QRU5fU0lHTl9VUF9ESUFMT0cgPSAnW0F1dGhdIFVzZXIgd2FudHMgdG8gc2lnbiB1cCcsXG4gICAgU0lHTl9VUCA9ICdbQXV0aF0gVXNlciB0cmllcyB0byBzaWduIHVwJyxcbiAgICBTSUdOX1VQX1NVQ0NFU1MgPSAnW0F1dGhdIFNpZ24gdXAgc3VjY2VzcycsXG4gICAgU0lHTl9VUF9GQUlMVVJFID0gJ1tBdXRoXSBTaWduIHVwIGZhaWx1cmUnLFxuXG4gICAgTE9HX0lOID0gJ1tBdXRoXSBVc2VyIHRyaWVzIHRvIGxvZyBpbicsXG4gICAgTE9HX0lOX1NVQ0NFU1MgPSAnW0F1dGhdIExvZyBpbiBzdWNjZXNzJyxcbiAgICBMT0dfSU5fRkFJTFVSRSA9ICdbQXV0aF0gTG9nIGluIGZhaWx1cmUnLFxuXG4gICAgTE9HX09VVCA9ICdbQXV0aF0gVXNlciBsb2dzIG91dCcsXG5cbiAgICBMT0FEX1VTRVJfSU5GT1JNQVRJT04gPSAnW0F1dGhdIExvYWRpbmcgb2YgdXNlciBpbmZvcm1hdGlvbicsXG4gICAgTE9BRF9VU0VSX0lORk9STUFUSU9OX1NVQ0NFU1MgPSAnW0F1dGhdIExvYWRpbmcgb2YgdXNlciBpbmZvcm1hdGlvbiBzdWNjZXNzJyxcbiAgICBMT0FEX1VTRVJfSU5GT1JNQVRJT05fRkFJTFVSRSA9ICdbQXV0aF0gTG9hZGluZyBvZiB1c2VyIGluZm9ybWF0aW9uIGZhaWx1cmUnLFxuXG4gICAgQ0hBTkdFX1BBU1NXT1JEID0gJ1tBdXRoXSBVc2VyIGNoYW5nZXMgaGlzIHBhc3N3b3JkJyxcbiAgICBDSEFOR0VfUEFTU1dPUkRfU1VDQ0VTUyA9ICdbQXV0aF0gUGFzc3dvcmQgY2hhbmdlIHN1Y2Nlc3MnLFxuICAgIENIQU5HRV9QQVNTV09SRF9GQUlMVVJFID0gJ1tBdXRoXSBQYXNzd29yZCBjaGFuZ2UgZmFpbHVyZScsXG5cbiAgICBPUEVOX0ZPUkdPVFRFTl9QQVNTV09SRF9ESUFMT0cgPSAnW0F1dGhdIFVzZXIgb3BlbnMgZGlhbG9nIGZvciBwYXNzd29yZCByZXNldHRpbmcnLFxuICAgIFNFTkRfUEFTU1dPUkQgPSAnW0F1dGhdIFVzZXIgaGFzIGFza2VkIGZvciBoYXZpbmcgYmFjayBhIG5ldyBwYXNzd29yZCcsXG4gICAgU0VORF9QQVNTV09SRF9TVUNDRVNTID0gJ1tBdXRoXSBVc2VyIGhhcyByZWNlaXZlZCBoaXMgcGFzc3dvcmQnLFxuICAgIFNFTkRfUEFTU1dPUkRfRkFJTFVSRSA9ICdbQXV0aF0gRXJyb3IgaW4gdGhlIHByb2Nlc3Mgb2Ygc2VuZGluZyB0aGUgcGFzc3dvcmQgdG8gdGhlIHVzZXInLFxuXG4gICAgVVBEQVRFX1VTRVIgPSAnW0F1dGhdIFVwZGF0ZSBvZiB1c2VyJ1xufVxuXG5leHBvcnQgY2xhc3MgT3BlblNpZ25VcERpYWxvZyBpbXBsZW1lbnRzIEFjdGlvbiB7XG4gICAgcmVhZG9ubHkgdHlwZSA9IEFVVEhfQUNUSU9OU19UWVBFLk9QRU5fU0lHTl9VUF9ESUFMT0c7XG59XG5cbmV4cG9ydCBjbGFzcyBTaWduVXAgaW1wbGVtZW50cyBBY3Rpb24ge1xuICAgIHJlYWRvbmx5IHR5cGUgPSBBVVRIX0FDVElPTlNfVFlQRS5TSUdOX1VQO1xuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyBwYXlsb2FkOiBQYXJ0aWFsPFVzZXI+KSB7fVxufVxuXG5leHBvcnQgY2xhc3MgU2lnblVwU3VjY2VzcyBpbXBsZW1lbnRzIEFjdGlvbiB7XG4gICAgcmVhZG9ubHkgdHlwZSA9IEFVVEhfQUNUSU9OU19UWVBFLlNJR05fVVBfU1VDQ0VTUztcbn1cblxuZXhwb3J0IGNsYXNzIFNpZ25VcEZhaWx1cmUgaW1wbGVtZW50cyBBY3Rpb24ge1xuICAgIHJlYWRvbmx5IHR5cGUgPSBBVVRIX0FDVElPTlNfVFlQRS5TSUdOX1VQX0ZBSUxVUkU7XG4gICAgY29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6IEh0dHBFcnJvclJlc3BvbnNlKSB7fVxufVxuXG5leHBvcnQgY2xhc3MgTG9nSW4gaW1wbGVtZW50cyBBY3Rpb24ge1xuICAgIHJlYWRvbmx5IHR5cGUgPSBBVVRIX0FDVElPTlNfVFlQRS5MT0dfSU47XG4gICAgY29uc3RydWN0b3IgKHB1YmxpYyBwYXlsb2FkOiBQYXJ0aWFsPFVzZXI+KSB7fVxufVxuXG5leHBvcnQgY2xhc3MgTG9nSW5TdWNjZXNzIGltcGxlbWVudHMgQWN0aW9uIHtcbiAgICByZWFkb25seSB0eXBlID0gQVVUSF9BQ1RJT05TX1RZUEUuTE9HX0lOX1NVQ0NFU1M7XG4gICAgY29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6IHtcbiAgICAgICAgdXNlcjogVXNlcixcbiAgICAgICAgdXNlcnNMaXN0OiB7IGlkOiBudW1iZXIsIGZpcnN0TmFtZTogc3RyaW5nLCBsYXN0TmFtZTogc3RyaW5nIH1bXVxuICAgIH0pIHt9XG59XG5cbmV4cG9ydCBjbGFzcyBMb2dJbkZhaWx1cmUgaW1wbGVtZW50cyBBY3Rpb24ge1xuICAgIHJlYWRvbmx5IHR5cGUgPSBBVVRIX0FDVElPTlNfVFlQRS5MT0dfSU5fRkFJTFVSRTtcbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgcGF5bG9hZDogSHR0cEVycm9yUmVzcG9uc2UpIHt9XG59XG5cbmV4cG9ydCBjbGFzcyBMb2dPdXQgaW1wbGVtZW50cyBBY3Rpb24ge1xuICAgIHJlYWRvbmx5IHR5cGUgPSBBVVRIX0FDVElPTlNfVFlQRS5MT0dfT1VUO1xufVxuXG5leHBvcnQgY2xhc3MgTG9hZFVzZXJJbmZvcm1hdGlvbiBpbXBsZW1lbnRzIEFjdGlvbiB7XG4gICAgcmVhZG9ubHkgdHlwZSA9IEFVVEhfQUNUSU9OU19UWVBFLkxPQURfVVNFUl9JTkZPUk1BVElPTjtcbn1cblxuZXhwb3J0IGNsYXNzIExvYWRVc2VySW5mb3JtYXRpb25TdWNjZXNzIGltcGxlbWVudHMgQWN0aW9uIHtcbiAgICByZWFkb25seSB0eXBlID0gQVVUSF9BQ1RJT05TX1RZUEUuTE9BRF9VU0VSX0lORk9STUFUSU9OX1NVQ0NFU1M7XG4gICAgY29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6IFVzZXIpIHt9XG59XG5cbmV4cG9ydCBjbGFzcyBMb2FkVXNlckluZm9ybWF0aW9uRmFpbHVyZSBpbXBsZW1lbnRzIEFjdGlvbiB7XG4gICAgcmVhZG9ubHkgdHlwZSA9IEFVVEhfQUNUSU9OU19UWVBFLkxPQURfVVNFUl9JTkZPUk1BVElPTl9GQUlMVVJFO1xuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyBwYXlsb2FkOiBIdHRwRXJyb3JSZXNwb25zZSkge31cbn1cblxuZXhwb3J0IGNsYXNzIENoYW5nZVBhc3N3b3JkIGltcGxlbWVudHMgQWN0aW9uIHtcbiAgICByZWFkb25seSB0eXBlID0gQVVUSF9BQ1RJT05TX1RZUEUuQ0hBTkdFX1BBU1NXT1JEO1xuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyBwYXlsb2FkOiB7IGN1cnJlbnRQYXNzd29yZDogc3RyaW5nLCBuZXh0UGFzc3dvcmQ6IHN0cmluZyB9KSB7fVxufVxuXG5leHBvcnQgY2xhc3MgQ2hhbmdlUGFzc3dvcmRTdWNjZXNzIGltcGxlbWVudHMgQWN0aW9uIHtcbiAgICByZWFkb25seSB0eXBlID0gQVVUSF9BQ1RJT05TX1RZUEUuQ0hBTkdFX1BBU1NXT1JEX1NVQ0NFU1M7XG59XG5cbmV4cG9ydCBjbGFzcyBDaGFuZ2VQYXNzd29yZEZhaWx1cmUgaW1wbGVtZW50cyBBY3Rpb24ge1xuICAgIHJlYWRvbmx5IHR5cGUgPSBBVVRIX0FDVElPTlNfVFlQRS5DSEFOR0VfUEFTU1dPUkRfRkFJTFVSRTtcbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgcGF5bG9hZDogSHR0cEVycm9yUmVzcG9uc2UpIHt9XG59XG5cbmV4cG9ydCBjbGFzcyBPcGVuRm9yZ290dGVuUGFzc3dvcmREaWFsb2cgaW1wbGVtZW50cyBBY3Rpb24ge1xuICAgIHJlYWRvbmx5IHR5cGUgPSBBVVRIX0FDVElPTlNfVFlQRS5PUEVOX0ZPUkdPVFRFTl9QQVNTV09SRF9ESUFMT0c7XG59XG5cbmV4cG9ydCBjbGFzcyBTZW5kUGFzc3dvcmQgaW1wbGVtZW50cyBBY3Rpb24ge1xuICAgIHJlYWRvbmx5IHR5cGUgPSBBVVRIX0FDVElPTlNfVFlQRS5TRU5EX1BBU1NXT1JEO1xuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyBwYXlsb2FkOiBzdHJpbmcpIHt9XG59XG5cbmV4cG9ydCBjbGFzcyBTZW5kUGFzc3dvcmRTdWNjZXNzIGltcGxlbWVudHMgQWN0aW9uIHtcbiAgICByZWFkb25seSB0eXBlID0gQVVUSF9BQ1RJT05TX1RZUEUuU0VORF9QQVNTV09SRF9TVUNDRVNTO1xufVxuXG5leHBvcnQgY2xhc3MgU2VuZFBhc3N3b3JkRmFpbHVyZSBpbXBsZW1lbnRzIEFjdGlvbiB7XG4gICAgcmVhZG9ubHkgdHlwZSA9IEFVVEhfQUNUSU9OU19UWVBFLlNFTkRfUEFTU1dPUkRfRkFJTFVSRTtcbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgcGF5bG9hZDogSHR0cEVycm9yUmVzcG9uc2UpIHt9XG59XG5cbmV4cG9ydCBjbGFzcyBVcGRhdGVVc2VyIGltcGxlbWVudHMgQWN0aW9uIHtcbiAgICByZWFkb25seSB0eXBlID0gQVVUSF9BQ1RJT05TX1RZUEUuVVBEQVRFX1VTRVI7XG4gICAgY29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6IFBhcnRpYWw8VXNlcj4pIHt9XG59XG5cbmV4cG9ydCB0eXBlIEFjdGlvbnMgPSBPcGVuU2lnblVwRGlhbG9nXG4gICAgfCBTaWduVXBcbiAgICB8IFNpZ25VcFN1Y2Nlc3NcbiAgICB8IFNpZ25VcEZhaWx1cmVcbiAgICB8IExvZ0luXG4gICAgfCBMb2dJblN1Y2Nlc3NcbiAgICB8IExvZ0luRmFpbHVyZVxuICAgIHwgTG9nT3V0XG4gICAgfCBMb2FkVXNlckluZm9ybWF0aW9uXG4gICAgfCBMb2FkVXNlckluZm9ybWF0aW9uU3VjY2Vzc1xuICAgIHwgTG9hZFVzZXJJbmZvcm1hdGlvbkZhaWx1cmVcbiAgICB8IENoYW5nZVBhc3N3b3JkXG4gICAgfCBDaGFuZ2VQYXNzd29yZFN1Y2Nlc3NcbiAgICB8IENoYW5nZVBhc3N3b3JkRmFpbHVyZVxuICAgIHwgT3BlbkZvcmdvdHRlblBhc3N3b3JkRGlhbG9nXG4gICAgfCBTZW5kUGFzc3dvcmRcbiAgICB8IFNlbmRQYXNzd29yZFN1Y2Nlc3NcbiAgICB8IFNlbmRQYXNzd29yZEZhaWx1cmVcbiAgICB8IFVwZGF0ZVVzZXI7XG4iXX0=