export var AUTH_ACTIONS_TYPE;
(function (AUTH_ACTIONS_TYPE) {
    AUTH_ACTIONS_TYPE["OPEN_SIGN_UP_DIALOG"] = "[Auth] User wants to sign up";
    AUTH_ACTIONS_TYPE["SIGN_UP"] = "[Auth] User tries to sign up";
    AUTH_ACTIONS_TYPE["SIGN_UP_SUCCESS"] = "[Auth] Sign up success";
    AUTH_ACTIONS_TYPE["SIGN_UP_FAILURE"] = "[Auth] Sign up failure";
    AUTH_ACTIONS_TYPE["LOG_IN"] = "[Auth] User tries to log in";
    AUTH_ACTIONS_TYPE["LOG_IN_SUCCESS"] = "[Auth] Log in success";
    AUTH_ACTIONS_TYPE["LOG_IN_FAILURE"] = "[Auth] Log in failure";
    AUTH_ACTIONS_TYPE["LOG_OUT"] = "[Auth] User logs out";
    AUTH_ACTIONS_TYPE["LOAD_USER_INFORMATION"] = "[Auth] Loading of user information";
    AUTH_ACTIONS_TYPE["LOAD_USER_INFORMATION_SUCCESS"] = "[Auth] Loading of user information success";
    AUTH_ACTIONS_TYPE["LOAD_USER_INFORMATION_FAILURE"] = "[Auth] Loading of user information failure";
    AUTH_ACTIONS_TYPE["CHANGE_PASSWORD"] = "[Auth] User changes his password";
    AUTH_ACTIONS_TYPE["CHANGE_PASSWORD_SUCCESS"] = "[Auth] Password change success";
    AUTH_ACTIONS_TYPE["CHANGE_PASSWORD_FAILURE"] = "[Auth] Password change failure";
    AUTH_ACTIONS_TYPE["OPEN_FORGOTTEN_PASSWORD_DIALOG"] = "[Auth] User opens dialog for password resetting";
    AUTH_ACTIONS_TYPE["SEND_PASSWORD"] = "[Auth] User has asked for having back a new password";
    AUTH_ACTIONS_TYPE["SEND_PASSWORD_SUCCESS"] = "[Auth] User has received his password";
    AUTH_ACTIONS_TYPE["SEND_PASSWORD_FAILURE"] = "[Auth] Error in the process of sending the password to the user";
})(AUTH_ACTIONS_TYPE || (AUTH_ACTIONS_TYPE = {}));
var OpenSignUpDialog = /** @class */ (function () {
    function OpenSignUpDialog() {
        this.type = AUTH_ACTIONS_TYPE.OPEN_SIGN_UP_DIALOG;
    }
    return OpenSignUpDialog;
}());
export { OpenSignUpDialog };
var SignUp = /** @class */ (function () {
    function SignUp(payload) {
        this.payload = payload;
        this.type = AUTH_ACTIONS_TYPE.SIGN_UP;
    }
    return SignUp;
}());
export { SignUp };
var SignUpSuccess = /** @class */ (function () {
    function SignUpSuccess() {
        this.type = AUTH_ACTIONS_TYPE.SIGN_UP_SUCCESS;
    }
    return SignUpSuccess;
}());
export { SignUpSuccess };
var SignUpFailure = /** @class */ (function () {
    function SignUpFailure(payload) {
        this.payload = payload;
        this.type = AUTH_ACTIONS_TYPE.SIGN_UP_FAILURE;
    }
    return SignUpFailure;
}());
export { SignUpFailure };
var LogIn = /** @class */ (function () {
    function LogIn(payload) {
        this.payload = payload;
        this.type = AUTH_ACTIONS_TYPE.LOG_IN;
    }
    return LogIn;
}());
export { LogIn };
var LogInSuccess = /** @class */ (function () {
    function LogInSuccess(payload) {
        this.payload = payload;
        this.type = AUTH_ACTIONS_TYPE.LOG_IN_SUCCESS;
    }
    return LogInSuccess;
}());
export { LogInSuccess };
var LogInFailure = /** @class */ (function () {
    function LogInFailure(payload) {
        this.payload = payload;
        this.type = AUTH_ACTIONS_TYPE.LOG_IN_FAILURE;
    }
    return LogInFailure;
}());
export { LogInFailure };
var LogOut = /** @class */ (function () {
    function LogOut() {
        this.type = AUTH_ACTIONS_TYPE.LOG_OUT;
    }
    return LogOut;
}());
export { LogOut };
var LoadUserInformation = /** @class */ (function () {
    function LoadUserInformation() {
        this.type = AUTH_ACTIONS_TYPE.LOAD_USER_INFORMATION;
    }
    return LoadUserInformation;
}());
export { LoadUserInformation };
var LoadUserInformationSuccess = /** @class */ (function () {
    function LoadUserInformationSuccess(payload) {
        this.payload = payload;
        this.type = AUTH_ACTIONS_TYPE.LOAD_USER_INFORMATION_SUCCESS;
    }
    return LoadUserInformationSuccess;
}());
export { LoadUserInformationSuccess };
var LoadUserInformationFailure = /** @class */ (function () {
    function LoadUserInformationFailure(payload) {
        this.payload = payload;
        this.type = AUTH_ACTIONS_TYPE.LOAD_USER_INFORMATION_FAILURE;
    }
    return LoadUserInformationFailure;
}());
export { LoadUserInformationFailure };
var ChangePassword = /** @class */ (function () {
    function ChangePassword(payload) {
        this.payload = payload;
        this.type = AUTH_ACTIONS_TYPE.CHANGE_PASSWORD;
    }
    return ChangePassword;
}());
export { ChangePassword };
var ChangePasswordSuccess = /** @class */ (function () {
    function ChangePasswordSuccess() {
        this.type = AUTH_ACTIONS_TYPE.CHANGE_PASSWORD_SUCCESS;
    }
    return ChangePasswordSuccess;
}());
export { ChangePasswordSuccess };
var ChangePasswordFailure = /** @class */ (function () {
    function ChangePasswordFailure(payload) {
        this.payload = payload;
        this.type = AUTH_ACTIONS_TYPE.CHANGE_PASSWORD_FAILURE;
    }
    return ChangePasswordFailure;
}());
export { ChangePasswordFailure };
var OpenForgottenPasswordDialog = /** @class */ (function () {
    function OpenForgottenPasswordDialog() {
        this.type = AUTH_ACTIONS_TYPE.OPEN_FORGOTTEN_PASSWORD_DIALOG;
    }
    return OpenForgottenPasswordDialog;
}());
export { OpenForgottenPasswordDialog };
var SendPassword = /** @class */ (function () {
    function SendPassword(payload) {
        this.payload = payload;
        this.type = AUTH_ACTIONS_TYPE.SEND_PASSWORD;
    }
    return SendPassword;
}());
export { SendPassword };
var SendPasswordSuccess = /** @class */ (function () {
    function SendPasswordSuccess() {
        this.type = AUTH_ACTIONS_TYPE.SEND_PASSWORD_SUCCESS;
    }
    return SendPasswordSuccess;
}());
export { SendPasswordSuccess };
var SendPasswordFailure = /** @class */ (function () {
    function SendPasswordFailure(payload) {
        this.payload = payload;
        this.type = AUTH_ACTIONS_TYPE.SEND_PASSWORD_FAILURE;
    }
    return SendPasswordFailure;
}());
export { SendPasswordFailure };
//# sourceMappingURL=data:application/json;base64,