{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://angular-auth-lib/store/actions.ts","ng://angular-auth-lib/token.ts","ng://angular-auth-lib/services/auth.service.ts","ng://angular-auth-lib/store/selectors.ts","ng://angular-auth-lib/services/auth-guard.service.ts","ng://angular-auth-lib/services/token.interceptor.ts","ng://angular-auth-lib/components/log-in/log-in.component.ts","ng://angular-auth-lib/components/forgotten-password/forgotten-password.component.ts","ng://angular-auth-lib/components/sign-up/sign-up.component.ts","ng://angular-auth-lib/store/reducer.ts","ng://angular-auth-lib/store/effects.ts","ng://angular-auth-lib/angular-auth-lib.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__decorate","decorators","target","key","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__read","o","m","Symbol","iterator","e","ar","next","done","push","value","error","AUTH_ACTIONS_TYPE","AUTH_API_URLS","InjectionToken","AUTH_IMAGES_URLS","AUTH_TRADUCTIONS","AUTH_RESET_ACTIONS","AUTH_STYLES","AuthService","apiUrls","platformId","http","decodeToken","token","tokenParts","split","tokenDecoded","JSON","parse","window","atob","expiringDate","Date","exp","getToken","isPlatformBrowser","sessionStorage","getItem","getAccessToken","user","_this","body","username","password","post","accessTokenUrl","pipe","map","tokenData","getRefreshToken","refresh","refreshTokenUrl","login","getUserInformation","get","userInformationUrl","result","usersList","dateJoined","changePassword","passwordChanges","put","changePasswordUrl","sendPassword","mail","sendBackPasswordUrl","email","createUser","signUpUrl","Inject","args","PLATFORM_ID","HttpClient","Injectable","providedIn","selectAuthState","createFeatureSelector","state","isAuthenticated","selectIsAuthenticated","createSelector","ɵ0","selectLogInError","ɵ1","selectUser","ɵ2","isPasswordBeingChanged","selectIsPasswordBeingChanged","ɵ3","selectUsersList","ɵ4","isSignUpLoading","selectIsSignUpLoading","ɵ5","AuthGuard","store","router","canActivate","route","select","withLatestFrom","_a","_b","allowedUrls","includes","routeConfig","path","setItem","url","navigate","Store","Router","TokenInterceptor","authService","intercept","request","clone","setHeaders","Authorization","handle","type","OPEN_SIGN_UP_DIALOG","payload","SIGN_UP","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_IN","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT","LOAD_USER_INFORMATION","LOAD_USER_INFORMATION_SUCCESS","LOAD_USER_INFORMATION_FAILURE","CHANGE_PASSWORD","CHANGE_PASSWORD_SUCCESS","CHANGE_PASSWORD_FAILURE","OPEN_FORGOTTEN_PASSWORD_DIALOG","SEND_PASSWORD","SEND_PASSWORD_SUCCESS","SEND_PASSWORD_FAILURE","UPDATE_USER","LogInComponent","images","traductions","styles","formBuilder","isPasswordBeingChanged$","usernamePlaceholder","passwordPlaceholder","forgottenPassword","loginButtonTraduction","buttonsBackgroundColor","buttonsColor","ngOnInit","userForm","group","Validators","required","openDialog","dispatch","OpenForgottenPasswordDialog","onSubmit","newUser","LogIn","FormBuilder","Component","selector","template","ForgottenPasswordComponent","emailPlaceholder","sendButtonTraduction","send","SendPassword","emailInput","nativeElement","ViewChild","SignUpComponent","dialogRef","firstNamePlaceholder","lastNamePlaceholder","enterprisePlaceholder","signUpDialogTitle","signupButtonTraduction","firstName","lastName","enterprise","SignUp","close","MatDialogRef","initialState","authReducer","action","UserActions.AUTH_ACTIONS_TYPE","detailedUser","AuthEffects","resetActions","actions","toastService","dialog","OpenSignUpDialog$","ofType","tap","open","SignUp$","switchMap","SignUpSuccess","catchError","of","SignUpFailure","SignUpSuccess$","success","SignUpFailure$","LogIn$","filter","concatMap","loggedInUser","LogInSuccess","LogInFailure","LogInSuccess$","redirectedUrlAfterLogIn","navigateByUrl","removeItem","redirectUrlAfterLogin","LogInFailure$","LogOut$","resetAction","LoadUserInformation$","LoadUserInformationSuccess","LoadUserInformationFailure","ChangePassword$","ChangePasswordSuccess","ChangePasswordFailure","ChangePasswordSuccess$","ChangePasswordFailure$","OpenForgottenPasswordDialog$","SendPassword$","SendPasswordSuccess","SendPasswordFailure","SendPasswordSuccess$","SendPasswordFailure$","Actions","ToastrService","MatDialog","Effect","AuthModule","forRoot","config","ngModule","AuthModule_1","providers","provide","useValue","urls","HTTP_INTERCEPTORS","useClass","multi","NgModule","declarations","imports","CommonModule","HttpClientModule","RouterModule","ReactiveFormsModule","StoreModule","forFeature","EffectsModule","BrowserAnimationsModule","MatCardModule","MatDialogModule","MatButtonModule","MatInputModule","MatProgressSpinnerModule","ToastrModule","timeOut","positionClass","preventDuplicates","entryComponents","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Action } from '@ngrx/store';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { User } from '../models/user.models';\n\nexport enum AUTH_ACTIONS_TYPE {\n    OPEN_SIGN_UP_DIALOG = '[Auth] User wants to sign up',\n    SIGN_UP = '[Auth] User tries to sign up',\n    SIGN_UP_SUCCESS = '[Auth] Sign up success',\n    SIGN_UP_FAILURE = '[Auth] Sign up failure',\n\n    LOG_IN = '[Auth] User tries to log in',\n    LOG_IN_SUCCESS = '[Auth] Log in success',\n    LOG_IN_FAILURE = '[Auth] Log in failure',\n\n    LOG_OUT = '[Auth] User logs out',\n\n    LOAD_USER_INFORMATION = '[Auth] Loading of user information',\n    LOAD_USER_INFORMATION_SUCCESS = '[Auth] Loading of user information success',\n    LOAD_USER_INFORMATION_FAILURE = '[Auth] Loading of user information failure',\n\n    CHANGE_PASSWORD = '[Auth] User changes his password',\n    CHANGE_PASSWORD_SUCCESS = '[Auth] Password change success',\n    CHANGE_PASSWORD_FAILURE = '[Auth] Password change failure',\n\n    OPEN_FORGOTTEN_PASSWORD_DIALOG = '[Auth] User opens dialog for password resetting',\n    SEND_PASSWORD = '[Auth] User has asked for having back a new password',\n    SEND_PASSWORD_SUCCESS = '[Auth] User has received his password',\n    SEND_PASSWORD_FAILURE = '[Auth] Error in the process of sending the password to the user',\n\n    UPDATE_USER = '[Auth] Update of user'\n}\n\nexport class OpenSignUpDialog implements Action {\n    readonly type = AUTH_ACTIONS_TYPE.OPEN_SIGN_UP_DIALOG;\n}\n\nexport class SignUp implements Action {\n    readonly type = AUTH_ACTIONS_TYPE.SIGN_UP;\n    constructor(public payload: Partial<User>) {}\n}\n\nexport class SignUpSuccess implements Action {\n    readonly type = AUTH_ACTIONS_TYPE.SIGN_UP_SUCCESS;\n}\n\nexport class SignUpFailure implements Action {\n    readonly type = AUTH_ACTIONS_TYPE.SIGN_UP_FAILURE;\n    constructor(public payload: HttpErrorResponse) {}\n}\n\nexport class LogIn implements Action {\n    readonly type = AUTH_ACTIONS_TYPE.LOG_IN;\n    constructor (public payload: Partial<User>) {}\n}\n\nexport class LogInSuccess implements Action {\n    readonly type = AUTH_ACTIONS_TYPE.LOG_IN_SUCCESS;\n    constructor(public payload: {\n        user: User,\n        usersList: { id: number, firstName: string, lastName: string }[]\n    }) {}\n}\n\nexport class LogInFailure implements Action {\n    readonly type = AUTH_ACTIONS_TYPE.LOG_IN_FAILURE;\n    constructor(public payload: HttpErrorResponse) {}\n}\n\nexport class LogOut implements Action {\n    readonly type = AUTH_ACTIONS_TYPE.LOG_OUT;\n}\n\nexport class LoadUserInformation implements Action {\n    readonly type = AUTH_ACTIONS_TYPE.LOAD_USER_INFORMATION;\n}\n\nexport class LoadUserInformationSuccess implements Action {\n    readonly type = AUTH_ACTIONS_TYPE.LOAD_USER_INFORMATION_SUCCESS;\n    constructor(public payload: User) {}\n}\n\nexport class LoadUserInformationFailure implements Action {\n    readonly type = AUTH_ACTIONS_TYPE.LOAD_USER_INFORMATION_FAILURE;\n    constructor(public payload: HttpErrorResponse) {}\n}\n\nexport class ChangePassword implements Action {\n    readonly type = AUTH_ACTIONS_TYPE.CHANGE_PASSWORD;\n    constructor(public payload: { currentPassword: string, nextPassword: string }) {}\n}\n\nexport class ChangePasswordSuccess implements Action {\n    readonly type = AUTH_ACTIONS_TYPE.CHANGE_PASSWORD_SUCCESS;\n}\n\nexport class ChangePasswordFailure implements Action {\n    readonly type = AUTH_ACTIONS_TYPE.CHANGE_PASSWORD_FAILURE;\n    constructor(public payload: HttpErrorResponse) {}\n}\n\nexport class OpenForgottenPasswordDialog implements Action {\n    readonly type = AUTH_ACTIONS_TYPE.OPEN_FORGOTTEN_PASSWORD_DIALOG;\n}\n\nexport class SendPassword implements Action {\n    readonly type = AUTH_ACTIONS_TYPE.SEND_PASSWORD;\n    constructor(public payload: string) {}\n}\n\nexport class SendPasswordSuccess implements Action {\n    readonly type = AUTH_ACTIONS_TYPE.SEND_PASSWORD_SUCCESS;\n}\n\nexport class SendPasswordFailure implements Action {\n    readonly type = AUTH_ACTIONS_TYPE.SEND_PASSWORD_FAILURE;\n    constructor(public payload: HttpErrorResponse) {}\n}\n\nexport class UpdateUser implements Action {\n    readonly type = AUTH_ACTIONS_TYPE.UPDATE_USER;\n    constructor(public payload: Partial<User>) {}\n}\n\nexport type Actions = OpenSignUpDialog\n    | SignUp\n    | SignUpSuccess\n    | SignUpFailure\n    | LogIn\n    | LogInSuccess\n    | LogInFailure\n    | LogOut\n    | LoadUserInformation\n    | LoadUserInformationSuccess\n    | LoadUserInformationFailure\n    | ChangePassword\n    | ChangePasswordSuccess\n    | ChangePasswordFailure\n    | OpenForgottenPasswordDialog\n    | SendPassword\n    | SendPasswordSuccess\n    | SendPasswordFailure\n    | UpdateUser;\n","import { InjectionToken } from '@angular/core';\n\nexport interface AuthModuleConfig {\n    urls: {\n      accessTokenUrl: string;\n      userInformationUrl: string;\n      sendBackPasswordUrl: string;\n      refreshTokenUrl?: string;\n      changePasswordUrl?: string;\n      signUpUrl?: string;\n    };\n    images: {\n      loginBackgroundImageUrl: string;\n      logoImageUrl: string;\n    };\n    traductions?: {\n      dialogs?: {\n        signup?: string;\n      }\n      buttons?: {\n        login?: string;\n        send?: string;\n        passwordForgotten?: string;\n        signup?: string;\n      }\n      form?: {\n        usernamePlaceholder?: string;\n        passwordPlaceholder?: string;\n        emailPlaceholder?: string;\n        firstNamePlaceholder?: string;\n        lastNamePlaceholder?: string;\n        enterprisePlaceholder?: string;\n      },\n      messages?: {\n        loginSuccess?: string;\n        loginFailure?: string;\n        signupSuccess?: string;\n        signupFailure?: string;\n        passwordResetSuccess?: string;\n        passwordResetFailure?: string;\n        changePasswordSuccess?: string;\n        changePasswordFailure?: string;\n      }\n    };\n    styles?: {\n        buttonsColor?: string;\n        buttonsBackgroundColor?: string;\n    };\n    resetActions?: any[];\n}\n\nexport const AUTH_API_URLS = new InjectionToken<AuthModuleConfig['urls']>('Auth api related urls');\nexport const AUTH_IMAGES_URLS = new InjectionToken<AuthModuleConfig['images']>('Images urls');\nexport const AUTH_TRADUCTIONS = new InjectionToken<AuthModuleConfig['traductions']>('Traductions');\nexport const AUTH_RESET_ACTIONS = new InjectionToken<AuthModuleConfig['resetActions']>('Reset actions');\nexport const AUTH_STYLES = new InjectionToken<AuthModuleConfig['styles']>('Styling');\n","import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User, Token } from '../models/user.models';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { AUTH_API_URLS, AuthModuleConfig } from '../token';\nimport { isPlatformBrowser } from '@angular/common';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(\n    @Inject(AUTH_API_URLS) private apiUrls: AuthModuleConfig['urls'],\n    @Inject(PLATFORM_ID) private platformId: any,\n    private http: HttpClient\n  ) { }\n\n  public decodeToken(token: string): Token {\n    const tokenParts = token.split(/\\./);\n    const tokenDecoded = JSON.parse(window.atob(tokenParts[1]));\n    const expiringDate = new Date(tokenDecoded.exp * 1000);\n    return { token: token, expiringDate: expiringDate };\n  }\n\n  public getToken(): Token {\n    const token = isPlatformBrowser(this.platformId) ? sessionStorage.getItem('token') : null;\n    return token ? this.decodeToken(token) : null;\n  }\n\n  private getAccessToken(user: User): Observable<Token> {\n    const body = { username: user.username, password: user.password };\n    return this.http.post(this.apiUrls.accessTokenUrl, body).pipe(\n      map((tokenData: any) => this.decodeToken(tokenData['access']))\n    );\n  }\n\n  private getRefreshToken(token: Token): Observable<Token> {\n    const body = { refresh: token.token };\n    return this.http.post(this.apiUrls.refreshTokenUrl, body).pipe(\n      map((tokenData: any) => this.decodeToken(tokenData['access']))\n    );\n  }\n\n  public login(user: User): Observable<User> {\n    return this.getAccessToken(user).pipe(\n      map((token: Token) => ({\n        ...user,\n        token: token\n      }))\n    );\n  }\n\n  getUserInformation(): Observable<{ user: User, usersList: User[] }> {\n    return this.http.get(this.apiUrls.userInformationUrl).pipe(\n      map((result: any) => ({\n        usersList: result.usersList,\n        user: { ...result.user, dateJoined: new Date(result.user.dateJoined) }\n      }))\n    );\n  }\n\n  changePassword(passwordChanges: { currentPassword: string, nextPassword: string }) {\n    return this.http.put(this.apiUrls.changePasswordUrl, passwordChanges);\n  }\n\n  sendPassword(mail: string) {\n    return this.http.post(this.apiUrls.sendBackPasswordUrl, { email: mail });\n  }\n\n  createUser(user: User) {\n    return this.http.post(this.apiUrls.signUpUrl, user);\n  }\n}\n","import { createSelector, createFeatureSelector } from '@ngrx/store';\nimport { AuthState } from './reducer';\n\nexport const selectAuthState = createFeatureSelector<AuthState>('auth');\n\nexport const selectIsAuthenticated = createSelector(\n    selectAuthState,\n    (state: AuthState) => state.isAuthenticated\n);\n\nexport const selectLogInError = createSelector(\n    selectAuthState,\n    (state: AuthState) => state.error\n);\n\nexport const selectUser = createSelector(\n    selectAuthState,\n    (state: AuthState) => state.user\n);\n\nexport const selectIsPasswordBeingChanged = createSelector(\n    selectAuthState,\n    (state: AuthState) => state.isPasswordBeingChanged\n);\n\nexport const selectUsersList = createSelector(\n    selectAuthState,\n    (state: AuthState) => state.usersList\n); // list of colleagues of the current user for example\n\nexport const selectIsSignUpLoading = createSelector(\n    selectAuthState,\n    (state: AuthState) => state.isSignUpLoading\n);\n","import { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, Router } from '@angular/router';\nimport { Injectable, Inject, PLATFORM_ID } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { map, withLatestFrom } from 'rxjs/operators';\nimport { Store, select } from '@ngrx/store';\n\nimport { selectUser, selectIsAuthenticated } from '../store/selectors';\nimport { AuthState } from '../store/reducer';\nimport { User } from '../models/user.models';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private store: Store<AuthState>,\n    private router: Router,\n    @Inject(PLATFORM_ID) private platformId: any,\n  ) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n    return this.store.pipe(\n      select(selectUser),\n      withLatestFrom(this.store.pipe(select(selectIsAuthenticated))),\n      map(([user, isAuthenticated]: [User, boolean]) => {\n        if (user && user.allowedUrls.includes(route.routeConfig.path) && isAuthenticated) {\n          return true;\n        } else {\n          if (user && user.allowedUrls.includes(route.routeConfig.path) && isPlatformBrowser(this.platformId)) {\n            sessionStorage.setItem('redirectedUrlAfterLogIn', state.url);\n          }\n          this.router.navigate(['log-in']);\n          return false;\n        }\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n  constructor(private authService: AuthService) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const token = this.authService.getToken();\n    if (token) {\n      request = request.clone({\n        setHeaders: {\n          'Authorization': `Bearer ${token.token}`\n        }\n      });\n    }\n    return next.handle(request);\n  }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Store, select } from '@ngrx/store';\n\nimport { get } from 'lodash';\n\nimport { User } from '../../models/user.models';\nimport { AuthState } from '../../store/reducer';\nimport { OpenForgottenPasswordDialog, LogIn } from '../../store/actions';\nimport { selectIsPasswordBeingChanged } from '../../store/selectors';\nimport { AUTH_IMAGES_URLS, AuthModuleConfig, AUTH_TRADUCTIONS, AUTH_STYLES } from '../../token';\n\n@Component({\n  selector: 'auth-lib-log-in',\n  templateUrl: './log-in.component.html',\n  styleUrls: ['./log-in.component.scss']\n})\nexport class LogInComponent implements OnInit {\n  isPasswordBeingChanged$ = this.store.pipe(select(selectIsPasswordBeingChanged));\n  userForm: FormGroup;\n\n  usernamePlaceholder = 'Username';\n  passwordPlaceholder = 'Password';\n  forgottenPassword = 'Forgot your password?';\n\n  loginButtonTraduction = 'Log in';\n  buttonsBackgroundColor = '#3f51b5';\n  buttonsColor = 'white';\n\n  constructor(\n    @Inject(AUTH_IMAGES_URLS) public images: AuthModuleConfig['images'],\n    @Inject(AUTH_TRADUCTIONS) private traductions: AuthModuleConfig['traductions'],\n    @Inject(AUTH_STYLES) private styles: AuthModuleConfig['styles'],\n    private formBuilder: FormBuilder,\n    private store: Store<AuthState>\n  ) {\n  }\n\n  ngOnInit() {\n    this.usernamePlaceholder = get(this.traductions || {}, 'form.usernamePlaceholder', this.usernamePlaceholder);\n    this.passwordPlaceholder = get(this.traductions || {}, 'form.passwordPlaceholder', this.passwordPlaceholder);\n    this.forgottenPassword = get(this.traductions || {}, 'buttons.passwordForgotten', this.forgottenPassword);\n\n    this.loginButtonTraduction = get(this.traductions || {}, 'buttons.login', this.loginButtonTraduction);\n    this.buttonsBackgroundColor = get(this.styles || {}, 'buttonsBackgroundColor', this.buttonsBackgroundColor);\n    this.buttonsColor = get(this.styles || {}, 'buttonsColor', this.buttonsColor);\n\n    this.userForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  openDialog() {\n    this.store.dispatch(new OpenForgottenPasswordDialog());\n  }\n\n  onSubmit() {\n    const newUser: Partial<User> = {\n      username: this.userForm.value['username'],\n      password: this.userForm.value['password']\n    };\n    this.store.dispatch(new LogIn(newUser));\n  }\n}\n","import { Component, ViewChild, ElementRef, Inject, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\n\nimport { get } from 'lodash';\n\nimport { AuthState } from '../../store/reducer';\nimport { SendPassword } from '../../store/actions';\nimport { AUTH_TRADUCTIONS, AUTH_STYLES, AuthModuleConfig } from '../../token';\n\n@Component({\n  selector: 'auth-lib-forgotten-password',\n  templateUrl: './forgotten-password.component.html',\n  styleUrls: ['./forgotten-password.component.scss']\n})\nexport class ForgottenPasswordComponent implements OnInit {\n  @ViewChild('email') emailInput: ElementRef;\n\n  emailPlaceholder = 'Your email';\n  sendButtonTraduction = 'Send';\n\n  buttonsBackgroundColor = '#3f51b5';\n  buttonsColor = 'white';\n\n  constructor(\n    private store: Store<AuthState>,\n    @Inject(AUTH_TRADUCTIONS) private traductions: AuthModuleConfig['traductions'],\n    @Inject(AUTH_STYLES) private styles: AuthModuleConfig['styles'],\n  ) { }\n\n  ngOnInit() {\n    this.emailPlaceholder = get(this.traductions || {}, 'form.emailPlaceholder', this.emailPlaceholder);\n    this.sendButtonTraduction = get(this.traductions || {}, 'buttons.send', this.sendButtonTraduction);\n\n    this.buttonsBackgroundColor = get(this.styles || {}, 'buttonsBackgroundColor', this.buttonsBackgroundColor);\n    this.buttonsColor = get(this.styles || {}, 'buttonsColor', this.buttonsColor);\n  }\n\n  send() {\n    this.store.dispatch(new SendPassword(this.emailInput.nativeElement.value));\n  }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Store } from '@ngrx/store';\n\nimport { get } from 'lodash';\n\nimport { AuthState } from '../../store/reducer';\nimport { User } from '../../models/user.models';\nimport { SignUp } from '../../store/actions';\nimport { AUTH_TRADUCTIONS, AuthModuleConfig, AUTH_STYLES } from '../../token';\n\n@Component({\n  selector: 'auth-lib-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss']\n})\nexport class SignUpComponent implements OnInit {\n  userForm: FormGroup;\n\n  usernamePlaceholder = 'Username';\n  passwordPlaceholder = 'Password';\n  firstNamePlaceholder = 'First name';\n  lastNamePlaceholder = 'Last name';\n  emailPlaceholder = 'Email';\n  enterprisePlaceholder = 'Enterprise';\n\n  signUpDialogTitle = 'Sign Up';\n\n  signupButtonTraduction = 'Log in';\n  buttonsBackgroundColor = '#3f51b5';\n  buttonsColor = 'white';\n\n  constructor(\n    @Inject(AUTH_TRADUCTIONS) private traductions: AuthModuleConfig['traductions'],\n    @Inject(AUTH_STYLES) private styles: AuthModuleConfig['styles'],\n    public dialogRef: MatDialogRef<SignUpComponent>,\n    private formBuilder: FormBuilder,\n    private store: Store<AuthState>\n  ) { }\n\n  ngOnInit() {\n    this.usernamePlaceholder = get(this.traductions || {}, 'form.usernamePlaceholder', this.usernamePlaceholder);\n    this.passwordPlaceholder = get(this.traductions || {}, 'form.passwordPlaceholder', this.passwordPlaceholder);\n    this.firstNamePlaceholder = get(this.traductions || {}, 'form.firstNamePlaceholder', this.firstNamePlaceholder);\n    this.lastNamePlaceholder = get(this.traductions || {}, 'form.lastNamePlaceholder', this.lastNamePlaceholder);\n    this.emailPlaceholder = get(this.traductions || {}, 'form.emailPlaceholder', this.emailPlaceholder);\n    this.enterprisePlaceholder = get(this.traductions || {}, 'form.enterprisePlaceholder', this.enterprisePlaceholder);\n\n    this.signUpDialogTitle = get(this.traductions || {}, 'dialogs.signup', this.signUpDialogTitle);\n\n    this.signupButtonTraduction = get(this.traductions || {}, 'buttons.signup', this.signupButtonTraduction);\n    this.buttonsBackgroundColor = get(this.styles || {}, 'buttonsBackgroundColor', this.buttonsBackgroundColor);\n    this.buttonsColor = get(this.styles || {}, 'buttonsColor', this.buttonsColor);\n\n    this.userForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', Validators.required],\n      enterprise: ''\n    });\n  }\n\n  onSubmit() {\n    const newUser: Partial<User> = {\n      username: this.userForm.value['username'],\n      password: this.userForm.value['password'],\n      firstName: this.userForm.value['firstName'],\n      lastName: this.userForm.value['lastName'],\n      email: this.userForm.value['email'],\n      enterprise: this.userForm.value['enterprise'] || null\n    };\n    this.store.dispatch(new SignUp(newUser));\n    this.dialogRef.close()\n  }\n}\n","import * as UserActions from './actions';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { User } from '../models/user.models';\n\nexport interface AuthState {\n    isAuthenticated: boolean;\n    isSignUpLoading: boolean;\n    user: User;\n    error: HttpErrorResponse;\n    isPasswordBeingChanged: boolean;\n    usersList: { id: number, firstName: string, lastName: string }[];\n}\n\nexport const initialState: AuthState = {\n    isAuthenticated: false,\n    isSignUpLoading: false,\n    user: null,\n    error: null,\n    isPasswordBeingChanged: false,\n    usersList: null\n};\n\nexport function authReducer(state: AuthState = initialState, action: UserActions.Actions) {\n    switch (action.type) {\n        case UserActions.AUTH_ACTIONS_TYPE.SIGN_UP:\n            return { ...state, error: null, isSignUpLoading: true };\n        case UserActions.AUTH_ACTIONS_TYPE.SIGN_UP_FAILURE:\n            return { ...state, error: action.payload, isSignUpLoading: false };\n        case UserActions.AUTH_ACTIONS_TYPE.SIGN_UP_SUCCESS:\n            return { ...state, error: null, isSignUpLoading: false };\n        case UserActions.AUTH_ACTIONS_TYPE.LOG_IN_SUCCESS:\n            return { ...state, isAuthenticated: true, user: action.payload.user, error: null, usersList: action.payload.usersList };\n        case UserActions.AUTH_ACTIONS_TYPE.LOG_IN_FAILURE:\n            return { ...state, error: action.payload };\n        case UserActions.AUTH_ACTIONS_TYPE.LOG_OUT:\n            return initialState;\n        case UserActions.AUTH_ACTIONS_TYPE.LOAD_USER_INFORMATION_SUCCESS:\n            const detailedUser = { ...state.user, ...action.payload };\n            return { ...state, user: detailedUser };\n        case UserActions.AUTH_ACTIONS_TYPE.CHANGE_PASSWORD:\n        case UserActions.AUTH_ACTIONS_TYPE.SEND_PASSWORD:\n            return { ...state, isPasswordBeingChanged: true };\n        case UserActions.AUTH_ACTIONS_TYPE.CHANGE_PASSWORD_SUCCESS:\n        case UserActions.AUTH_ACTIONS_TYPE.CHANGE_PASSWORD_FAILURE:\n        case UserActions.AUTH_ACTIONS_TYPE.SEND_PASSWORD_SUCCESS:\n        case UserActions.AUTH_ACTIONS_TYPE.SEND_PASSWORD_FAILURE:\n            return { ...state, isPasswordBeingChanged: false };\n        case UserActions.AUTH_ACTIONS_TYPE.UPDATE_USER:\n            return { ...state, user: { ...state.user, ...action.payload }};\n        default:\n            return state;\n    }\n}\n","import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { of } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ToastrService } from 'ngx-toastr';\nimport { Store, select } from '@ngrx/store';\nimport { MatDialogRef, MatDialog } from '@angular/material/dialog';\nimport { map, switchMap, catchError, tap, withLatestFrom, concatMap, filter } from 'rxjs/operators';\n\nimport { get } from 'lodash';\n\nimport {\n  AUTH_ACTIONS_TYPE,\n  LogIn,\n  LogInSuccess,\n  LogInFailure,\n  LogOut,\n  SignUp,\n  SignUpFailure,\n  SignUpSuccess,\n  ChangePassword,\n  ChangePasswordSuccess,\n  ChangePasswordFailure,\n  LoadUserInformationSuccess,\n  LoadUserInformationFailure,\n  LoadUserInformation,\n  SendPassword,\n  SendPasswordSuccess,\n  SendPasswordFailure\n} from './actions';\nimport { selectUser } from './selectors';\nimport { User } from '../models/user.models';\nimport { AuthService } from '../services/auth.service';\nimport { ForgottenPasswordComponent } from '../components/forgotten-password/forgotten-password.component';\nimport { AUTH_RESET_ACTIONS, AUTH_TRADUCTIONS, AuthModuleConfig } from '../token';\nimport { AuthState } from './reducer';\nimport { SignUpComponent } from '../components/sign-up/sign-up.component';\nimport { isPlatformBrowser } from '@angular/common';\n\n\n@Injectable()\nexport class AuthEffects {\n  private dialogRef: MatDialogRef<SignUpComponent | ForgottenPasswordComponent>;\n\n  constructor(\n    @Inject(AUTH_RESET_ACTIONS) private resetActions: any[],\n    @Inject(AUTH_TRADUCTIONS) private traductions: AuthModuleConfig['traductions'],\n    @Inject(PLATFORM_ID) private platformId: any,\n    private actions: Actions,\n    private authService: AuthService,\n    private router: Router,\n    private toastService: ToastrService,\n    private dialog: MatDialog,\n    private store: Store<AuthState>\n  ) { }\n\n  @Effect({ dispatch: false })\n  OpenSignUpDialog$ = this.actions.pipe(\n    ofType(AUTH_ACTIONS_TYPE.OPEN_SIGN_UP_DIALOG),\n    tap(() => this.dialogRef = this.dialog.open(SignUpComponent))\n  );\n\n  @Effect()\n  SignUp$ = this.actions.pipe(\n    ofType(AUTH_ACTIONS_TYPE.SIGN_UP),\n    map((action: SignUp) => action.payload),\n    switchMap((user: User) => this.authService.createUser(user).pipe(\n      map(() => new SignUpSuccess()),\n      catchError((error: HttpErrorResponse) => of(new SignUpFailure(error)))\n    ))\n  );\n\n  @Effect({ dispatch: false })\n  SignUpSuccess$ = this.actions.pipe(\n    ofType(AUTH_ACTIONS_TYPE.SIGN_UP_SUCCESS),\n    tap(() => {\n      this.toastService.success(\n        get(this.traductions || {}, 'messages.signupSuccess', 'Your account has been created!')\n      )\n    })\n  );\n\n  @Effect({ dispatch: false })\n  SignUpFailure$ = this.actions.pipe(\n    ofType(AUTH_ACTIONS_TYPE.SIGN_UP_FAILURE),\n    tap((error: HttpErrorResponse) => this.toastService.error(\n      get(this.traductions || {}, 'messages.signupFailure', 'Please try again with a new username.')\n    ))\n  );\n\n  @Effect()\n  LogIn$ = this.actions.pipe(\n    ofType(AUTH_ACTIONS_TYPE.LOG_IN),\n    filter((action: LogIn) => isPlatformBrowser(this.platformId)),\n    map((action: LogIn) => action.payload),\n    switchMap((user: User) => this.authService.login(user).pipe(\n      concatMap((loggedInUser: User) => {\n        sessionStorage.setItem('token', loggedInUser.token.token);\n        return this.authService.getUserInformation().pipe(\n          map(({user, usersList}) => new LogInSuccess({ user, usersList })),\n          catchError((error: HttpErrorResponse) => of(new LogInFailure(error)))\n        );\n      }),\n      catchError((error: HttpErrorResponse) => of(new LogInFailure(error)))\n    ))\n  );\n\n  @Effect({ dispatch: false })\n  LogInSuccess$ = this.actions.pipe(\n    ofType(AUTH_ACTIONS_TYPE.LOG_IN_SUCCESS),\n    filter((action: LogInSuccess) => isPlatformBrowser(this.platformId)),\n    withLatestFrom(this.store.pipe(select(selectUser))),\n    tap(([action, user]: [LogInSuccess, User]) => {\n      const redirectedUrlAfterLogIn = sessionStorage.getItem('redirectedUrlAfterLogIn');\n      if (redirectedUrlAfterLogIn && isPlatformBrowser(this.platformId)) {\n        this.router.navigateByUrl(redirectedUrlAfterLogIn)\n        sessionStorage.removeItem('redirectedUrlAfterLogIn');\n      } else {\n        this.router.navigateByUrl(user.redirectUrlAfterLogin);\n      }\n      this.toastService.success(\n        get(this.traductions || {}, 'messages.loginSuccess', 'Hi! Nice to see you again!')\n      );\n    })\n  );\n\n  @Effect({ dispatch: false })\n  LogInFailure$ = this.actions.pipe(\n    ofType(AUTH_ACTIONS_TYPE.LOG_IN_FAILURE),\n    tap((error: HttpErrorResponse) => this.toastService.error(\n      get(this.traductions || {}, 'messages.loginFailure', 'Wrong credentials. Please check again.')\n    ))\n  );\n\n  @Effect()\n  LogOut$ = this.actions.pipe(\n    ofType(AUTH_ACTIONS_TYPE.LOG_OUT),\n    filter((action: LogOut) => isPlatformBrowser(this.platformId)),\n    switchMap((action: LogOut) => {\n      sessionStorage.removeItem('token');\n      this.router.navigate(['log-in']);\n      return (this.resetActions || []).map((resetAction: any) => new resetAction())\n    })\n  );\n\n  @Effect()\n  LoadUserInformation$ = this.actions.pipe(\n    ofType(AUTH_ACTIONS_TYPE.LOAD_USER_INFORMATION),\n    switchMap((action: LoadUserInformation) => this.authService.getUserInformation().pipe(\n      map(({user, usersList}) => new LoadUserInformationSuccess(user)),\n      catchError((error: HttpErrorResponse) => of(new LoadUserInformationFailure(error)))\n    ))\n  );\n\n  @Effect()\n  ChangePassword$ = this.actions.pipe(\n    ofType(AUTH_ACTIONS_TYPE.CHANGE_PASSWORD),\n    switchMap((action: ChangePassword) => this.authService.changePassword(action.payload).pipe(\n      map(() => new ChangePasswordSuccess()),\n      catchError((error: HttpErrorResponse) => of(new ChangePasswordFailure(error)))\n    ))\n  );\n\n  @Effect({ dispatch: false })\n  ChangePasswordSuccess$ = this.actions.pipe(\n    ofType(AUTH_ACTIONS_TYPE.CHANGE_PASSWORD_SUCCESS),\n    tap(() => this.toastService.success(\n      get(this.traductions || {}, 'messages.changePasswordSuccess', 'Your password has been successfully changed!')\n    ))\n  );\n\n  @Effect({ dispatch: false })\n  ChangePasswordFailure$ = this.actions.pipe(\n    ofType(AUTH_ACTIONS_TYPE.CHANGE_PASSWORD_FAILURE),\n    tap((error: HttpErrorResponse) => this.toastService.error(\n      get(this.traductions || {}, 'messages.changePasswordFailure', 'Wrong current password. Please try again.')\n    ))\n  );\n\n  @Effect({ dispatch: false })\n  OpenForgottenPasswordDialog$ = this.actions.pipe(\n    ofType(AUTH_ACTIONS_TYPE.OPEN_FORGOTTEN_PASSWORD_DIALOG),\n    tap(() => this.dialogRef = this.dialog.open(ForgottenPasswordComponent))\n  );\n\n  @Effect()\n  SendPassword$ = this.actions.pipe(\n    ofType(AUTH_ACTIONS_TYPE.SEND_PASSWORD),\n    tap(() => {\n      this.dialogRef.close();\n    }),\n    switchMap((action: SendPassword) => this.authService.sendPassword(action.payload).pipe(\n      map(() => new SendPasswordSuccess()),\n      catchError((error: HttpErrorResponse) => of(new SendPasswordFailure(error)))\n    ))\n  );\n\n  @Effect({ dispatch: false })\n  SendPasswordSuccess$ = this.actions.pipe(\n    ofType(AUTH_ACTIONS_TYPE.SEND_PASSWORD_SUCCESS),\n    tap(() => this.toastService.success(\n      get(this.traductions || {}, 'messages.passwordResetSuccess', 'An email for resetting your password has been sent to your address.')\n    ))\n  );\n\n  @Effect({ dispatch: false })\n  SendPasswordFailure$ = this.actions.pipe(\n    ofType(AUTH_ACTIONS_TYPE.SEND_PASSWORD_FAILURE),\n    tap(() => this.toastService.error(\n      get(this.traductions || {}, 'messages.passwordResetFailure', 'An error occured. Please try again.')\n    ))\n  );\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { authReducer } from './store/reducer';\nimport { AuthEffects } from './store/effects';\nimport { TokenInterceptor } from './services/token.interceptor';\nimport { AuthGuard } from './services/auth-guard.service';\nimport { LogInComponent } from './components/log-in/log-in.component';\nimport { ForgottenPasswordComponent } from './components/forgotten-password/forgotten-password.component';\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\n\nimport {\n  AuthModuleConfig,\n  AUTH_API_URLS,\n  AUTH_IMAGES_URLS,\n  AUTH_TRADUCTIONS,\n  AUTH_RESET_ACTIONS,\n  AUTH_STYLES\n} from './token';\n\n\n@NgModule({\n  declarations: [LogInComponent, ForgottenPasswordComponent, SignUpComponent],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    RouterModule,\n    ReactiveFormsModule,\n    StoreModule.forFeature('auth', authReducer),\n    EffectsModule.forFeature([AuthEffects]),\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    ToastrModule.forRoot({\n      timeOut: 3000,\n      positionClass: 'toast-bottom-right',\n      preventDuplicates: true\n    })\n  ],\n  entryComponents: [ForgottenPasswordComponent],\n  exports: [LogInComponent, ForgottenPasswordComponent],\n  providers: [AuthGuard]\n})\nexport class AuthModule {\n  static forRoot(config: AuthModuleConfig): ModuleWithProviders<AuthModule> {\n    return {\n      ngModule: AuthModule,\n      providers: [\n        { provide: AUTH_API_URLS, useValue: config.urls },\n        { provide: AUTH_IMAGES_URLS, useValue: config.images },\n        { provide: AUTH_TRADUCTIONS, useValue: config.traductions },\n        { provide: AUTH_RESET_ACTIONS, useValue: config.resetActions },\n        { provide: AUTH_STYLES, useValue: config.styles },\n        { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true }\n      ]\n    };\n  }\n}\n"]}