import { createSelector, createFeatureSelector } from '@ngrx/store';
export const selectAuthState = createFeatureSelector('auth');
const ɵ0 = (state) => state.isAuthenticated;
export const selectIsAuthenticated = createSelector(selectAuthState, ɵ0);
const ɵ1 = (state) => state.error;
export const selectLogInError = createSelector(selectAuthState, ɵ1);
const ɵ2 = (state) => state.user;
export const selectUser = createSelector(selectAuthState, ɵ2);
const ɵ3 = (state) => state.isPasswordBeingChanged;
export const selectIsPasswordBeingChanged = createSelector(selectAuthState, ɵ3);
const ɵ4 = (state) => state.usersList;
export const selectUsersList = createSelector(selectAuthState, ɵ4); // list of colleagues of the current user for example
const ɵ5 = (state) => state.isSignUpLoading;
export const selectIsSignUpLoading = createSelector(selectAuthState, ɵ5);
const ɵ6 = (state) => state.isSendActivationCodeLoading;
export const selectIsSendActivationCodeLoading = createSelector(selectAuthState, ɵ6);
const ɵ7 = (state) => state.isUserActivated;
export const selectIsActivated = createSelector(selectAuthState, ɵ7);
const ɵ8 = (state) => state.isUserCreated;
export const selectIsUserCreated = createSelector(selectAuthState, ɵ8);
const ɵ9 = (state) => state.isLoginLoading;
export const selectIsLoginLoading = createSelector(selectAuthState, ɵ9);
export { ɵ0, ɵ1, ɵ2, ɵ3, ɵ4, ɵ5, ɵ6, ɵ7, ɵ8, ɵ9 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0b3JzLmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhci1hdXRoLWxpYi8iLCJzb3VyY2VzIjpbInN0b3JlL3NlbGVjdG9ycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsY0FBYyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sYUFBYSxDQUFDO0FBR3BFLE1BQU0sQ0FBQyxNQUFNLGVBQWUsR0FBRyxxQkFBcUIsQ0FBWSxNQUFNLENBQUMsQ0FBQztXQUlwRSxDQUFDLEtBQWdCLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxlQUFlO0FBRi9DLE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFHLGNBQWMsQ0FDL0MsZUFBZSxLQUVsQixDQUFDO1dBSUUsQ0FBQyxLQUFnQixFQUFFLEVBQUUsQ0FBQyxLQUFLLENBQUMsS0FBSztBQUZyQyxNQUFNLENBQUMsTUFBTSxnQkFBZ0IsR0FBRyxjQUFjLENBQzFDLGVBQWUsS0FFbEIsQ0FBQztXQUlFLENBQUMsS0FBZ0IsRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLElBQUk7QUFGcEMsTUFBTSxDQUFDLE1BQU0sVUFBVSxHQUFHLGNBQWMsQ0FDcEMsZUFBZSxLQUVsQixDQUFDO1dBSUUsQ0FBQyxLQUFnQixFQUFFLEVBQUUsQ0FBQyxLQUFLLENBQUMsc0JBQXNCO0FBRnRELE1BQU0sQ0FBQyxNQUFNLDRCQUE0QixHQUFHLGNBQWMsQ0FDdEQsZUFBZSxLQUVsQixDQUFDO1dBSUUsQ0FBQyxLQUFnQixFQUFFLEVBQUUsQ0FBQyxLQUFLLENBQUMsU0FBUztBQUZ6QyxNQUFNLENBQUMsTUFBTSxlQUFlLEdBQUcsY0FBYyxDQUN6QyxlQUFlLEtBRWxCLENBQUMsQ0FBQyxxREFBcUQ7V0FJcEQsQ0FBQyxLQUFnQixFQUFFLEVBQUUsQ0FBQyxLQUFLLENBQUMsZUFBZTtBQUYvQyxNQUFNLENBQUMsTUFBTSxxQkFBcUIsR0FBRyxjQUFjLENBQy9DLGVBQWUsS0FFbEIsQ0FBQztXQUlFLENBQUMsS0FBZ0IsRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLDJCQUEyQjtBQUYzRCxNQUFNLENBQUMsTUFBTSxpQ0FBaUMsR0FBRyxjQUFjLENBQzNELGVBQWUsS0FFbEIsQ0FBQztXQUlFLENBQUMsS0FBZ0IsRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLGVBQWU7QUFGL0MsTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQUcsY0FBYyxDQUMzQyxlQUFlLEtBRWxCLENBQUM7V0FJRSxDQUFDLEtBQWdCLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxhQUFhO0FBRjdDLE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFHLGNBQWMsQ0FDN0MsZUFBZSxLQUVsQixDQUFDO1dBSUUsQ0FBQyxLQUFnQixFQUFFLEVBQUUsQ0FBQyxLQUFLLENBQUMsY0FBYztBQUY5QyxNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBRyxjQUFjLENBQzlDLGVBQWUsS0FFbEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZVNlbGVjdG9yLCBjcmVhdGVGZWF0dXJlU2VsZWN0b3IgfSBmcm9tICdAbmdyeC9zdG9yZSc7XG5pbXBvcnQgeyBBdXRoU3RhdGUgfSBmcm9tICcuL3JlZHVjZXInO1xuXG5leHBvcnQgY29uc3Qgc2VsZWN0QXV0aFN0YXRlID0gY3JlYXRlRmVhdHVyZVNlbGVjdG9yPEF1dGhTdGF0ZT4oJ2F1dGgnKTtcblxuZXhwb3J0IGNvbnN0IHNlbGVjdElzQXV0aGVudGljYXRlZCA9IGNyZWF0ZVNlbGVjdG9yKFxuICAgIHNlbGVjdEF1dGhTdGF0ZSxcbiAgICAoc3RhdGU6IEF1dGhTdGF0ZSkgPT4gc3RhdGUuaXNBdXRoZW50aWNhdGVkXG4pO1xuXG5leHBvcnQgY29uc3Qgc2VsZWN0TG9nSW5FcnJvciA9IGNyZWF0ZVNlbGVjdG9yKFxuICAgIHNlbGVjdEF1dGhTdGF0ZSxcbiAgICAoc3RhdGU6IEF1dGhTdGF0ZSkgPT4gc3RhdGUuZXJyb3Jcbik7XG5cbmV4cG9ydCBjb25zdCBzZWxlY3RVc2VyID0gY3JlYXRlU2VsZWN0b3IoXG4gICAgc2VsZWN0QXV0aFN0YXRlLFxuICAgIChzdGF0ZTogQXV0aFN0YXRlKSA9PiBzdGF0ZS51c2VyXG4pO1xuXG5leHBvcnQgY29uc3Qgc2VsZWN0SXNQYXNzd29yZEJlaW5nQ2hhbmdlZCA9IGNyZWF0ZVNlbGVjdG9yKFxuICAgIHNlbGVjdEF1dGhTdGF0ZSxcbiAgICAoc3RhdGU6IEF1dGhTdGF0ZSkgPT4gc3RhdGUuaXNQYXNzd29yZEJlaW5nQ2hhbmdlZFxuKTtcblxuZXhwb3J0IGNvbnN0IHNlbGVjdFVzZXJzTGlzdCA9IGNyZWF0ZVNlbGVjdG9yKFxuICAgIHNlbGVjdEF1dGhTdGF0ZSxcbiAgICAoc3RhdGU6IEF1dGhTdGF0ZSkgPT4gc3RhdGUudXNlcnNMaXN0XG4pOyAvLyBsaXN0IG9mIGNvbGxlYWd1ZXMgb2YgdGhlIGN1cnJlbnQgdXNlciBmb3IgZXhhbXBsZVxuXG5leHBvcnQgY29uc3Qgc2VsZWN0SXNTaWduVXBMb2FkaW5nID0gY3JlYXRlU2VsZWN0b3IoXG4gICAgc2VsZWN0QXV0aFN0YXRlLFxuICAgIChzdGF0ZTogQXV0aFN0YXRlKSA9PiBzdGF0ZS5pc1NpZ25VcExvYWRpbmdcbik7XG5cbmV4cG9ydCBjb25zdCBzZWxlY3RJc1NlbmRBY3RpdmF0aW9uQ29kZUxvYWRpbmcgPSBjcmVhdGVTZWxlY3RvcihcbiAgICBzZWxlY3RBdXRoU3RhdGUsXG4gICAgKHN0YXRlOiBBdXRoU3RhdGUpID0+IHN0YXRlLmlzU2VuZEFjdGl2YXRpb25Db2RlTG9hZGluZ1xuKTtcblxuZXhwb3J0IGNvbnN0IHNlbGVjdElzQWN0aXZhdGVkID0gY3JlYXRlU2VsZWN0b3IoXG4gICAgc2VsZWN0QXV0aFN0YXRlLFxuICAgIChzdGF0ZTogQXV0aFN0YXRlKSA9PiBzdGF0ZS5pc1VzZXJBY3RpdmF0ZWRcbik7XG5cbmV4cG9ydCBjb25zdCBzZWxlY3RJc1VzZXJDcmVhdGVkID0gY3JlYXRlU2VsZWN0b3IoXG4gICAgc2VsZWN0QXV0aFN0YXRlLFxuICAgIChzdGF0ZTogQXV0aFN0YXRlKSA9PiBzdGF0ZS5pc1VzZXJDcmVhdGVkXG4pO1xuXG5leHBvcnQgY29uc3Qgc2VsZWN0SXNMb2dpbkxvYWRpbmcgPSBjcmVhdGVTZWxlY3RvcihcbiAgICBzZWxlY3RBdXRoU3RhdGUsXG4gICAgKHN0YXRlOiBBdXRoU3RhdGUpID0+IHN0YXRlLmlzTG9naW5Mb2FkaW5nXG4pO1xuIl19