/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes,extraRequire}
 * tslint:disable
 */ 
import * as i0 from "@angular/core";
import * as i1 from "./angular-auth-lib.module";
import * as i2 from "../../../node_modules/@angular/router/router.ngfactory";
import * as i3 from "../../../node_modules/@angular/material/dialog/index.ngfactory";
import * as i4 from "../../../node_modules/ngx-toastr/ngx-toastr.ngfactory";
import * as i5 from "./components/forgotten-password/forgotten-password.component.ngfactory";
import * as i6 from "@angular/common";
import * as i7 from "@angular/common/http";
import * as i8 from "@angular/forms";
import * as i9 from "@angular/platform-browser";
import * as i10 from "@angular/animations/browser";
import * as i11 from "@angular/platform-browser/animations";
import * as i12 from "@angular/animations";
import * as i13 from "@angular/cdk/overlay";
import * as i14 from "@angular/cdk/bidi";
import * as i15 from "@angular/material/dialog";
import * as i16 from "@angular/cdk/observers";
import * as i17 from "@angular/material/core";
import * as i18 from "./store/effects";
import * as i19 from "./token";
import * as i20 from "@ngrx/effects";
import * as i21 from "./services/auth.service";
import * as i22 from "@angular/router";
import * as i23 from "ngx-toastr";
import * as i24 from "@ngrx/store";
import * as i25 from "./services/auth-guard.service";
import * as i26 from "./store/reducer";
import * as i27 from "@angular/cdk/a11y";
import * as i28 from "@angular/material/card";
import * as i29 from "@angular/cdk/portal";
import * as i30 from "@angular/cdk/platform";
import * as i31 from "@angular/cdk/scrolling";
import * as i32 from "@angular/material/button";
import * as i33 from "@angular/cdk/text-field";
import * as i34 from "@angular/material/form-field";
import * as i35 from "@angular/material/input";
import * as i36 from "@angular/material/progress-spinner";
var AuthModuleNgFactory = i0.ɵcmf(i1.AuthModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, [i2.ɵangular_packages_router_router_lNgFactory, i3.MatDialogContainerNgFactory, i4.ToastNgFactory, i5.ForgottenPasswordComponentNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(5120, i0.LOCALE_ID, i0.ɵangular_packages_core_core_r, [[3, i0.LOCALE_ID]]), i0.ɵmpd(4608, i6.NgLocalization, i6.NgLocaleLocalization, [i0.LOCALE_ID]), i0.ɵmpd(4608, i7.HttpXsrfTokenExtractor, i7.ɵangular_packages_common_http_http_g, [i6.DOCUMENT, i0.PLATFORM_ID, i7.ɵangular_packages_common_http_http_e]), i0.ɵmpd(4608, i7.ɵangular_packages_common_http_http_h, i7.ɵangular_packages_common_http_http_h, [i7.HttpXsrfTokenExtractor, i7.ɵangular_packages_common_http_http_f]), i0.ɵmpd(5120, i7.HTTP_INTERCEPTORS, function (p0_0) { return [p0_0]; }, [i7.ɵangular_packages_common_http_http_h]), i0.ɵmpd(4608, i7.ɵangular_packages_common_http_http_d, i7.ɵangular_packages_common_http_http_d, []), i0.ɵmpd(6144, i7.XhrFactory, null, [i7.ɵangular_packages_common_http_http_d]), i0.ɵmpd(4608, i7.HttpXhrBackend, i7.HttpXhrBackend, [i7.XhrFactory]), i0.ɵmpd(6144, i7.HttpBackend, null, [i7.HttpXhrBackend]), i0.ɵmpd(4608, i7.HttpHandler, i7.ɵHttpInterceptingHandler, [i7.HttpBackend, i0.Injector]), i0.ɵmpd(4608, i7.HttpClient, i7.HttpClient, [i7.HttpHandler]), i0.ɵmpd(4608, i8.FormBuilder, i8.FormBuilder, []), i0.ɵmpd(4608, i8.ɵangular_packages_forms_forms_n, i8.ɵangular_packages_forms_forms_n, []), i0.ɵmpd(5120, i0.ɵangular_packages_core_core_x, i0.ɵangular_packages_core_core_t, [i0.NgZone]), i0.ɵmpd(4608, i0.Compiler, i0.Compiler, []), i0.ɵmpd(5120, i0.APP_ID, i0.ɵangular_packages_core_core_g, []), i0.ɵmpd(5120, i0.IterableDiffers, i0.ɵangular_packages_core_core_p, []), i0.ɵmpd(5120, i0.KeyValueDiffers, i0.ɵangular_packages_core_core_q, []), i0.ɵmpd(4608, i9.DomSanitizer, i9.ɵDomSanitizerImpl, [i6.DOCUMENT]), i0.ɵmpd(6144, i0.Sanitizer, null, [i9.DomSanitizer]), i0.ɵmpd(4608, i9.HAMMER_GESTURE_CONFIG, i9.HammerGestureConfig, []), i0.ɵmpd(5120, i9.EVENT_MANAGER_PLUGINS, function (p0_0, p0_1, p0_2, p1_0, p2_0, p2_1, p2_2, p2_3) { return [new i9.ɵDomEventsPlugin(p0_0, p0_1, p0_2), new i9.ɵKeyEventsPlugin(p1_0), new i9.ɵHammerGesturesPlugin(p2_0, p2_1, p2_2, p2_3)]; }, [i6.DOCUMENT, i0.NgZone, i0.PLATFORM_ID, i6.DOCUMENT, i6.DOCUMENT, i9.HAMMER_GESTURE_CONFIG, i0.ɵConsole, [2, i9.HAMMER_LOADER]]), i0.ɵmpd(4608, i9.EventManager, i9.EventManager, [i9.EVENT_MANAGER_PLUGINS, i0.NgZone]), i0.ɵmpd(135680, i9.ɵDomSharedStylesHost, i9.ɵDomSharedStylesHost, [i6.DOCUMENT]), i0.ɵmpd(4608, i9.ɵDomRendererFactory2, i9.ɵDomRendererFactory2, [i9.EventManager, i9.ɵDomSharedStylesHost, i0.APP_ID]), i0.ɵmpd(5120, i10.AnimationDriver, i11.ɵangular_packages_platform_browser_animations_animations_a, []), i0.ɵmpd(5120, i10.ɵAnimationStyleNormalizer, i11.ɵangular_packages_platform_browser_animations_animations_b, []), i0.ɵmpd(4608, i10.ɵAnimationEngine, i11.ɵInjectableAnimationEngine, [i6.DOCUMENT, i10.AnimationDriver, i10.ɵAnimationStyleNormalizer]), i0.ɵmpd(5120, i0.RendererFactory2, i11.ɵangular_packages_platform_browser_animations_animations_c, [i9.ɵDomRendererFactory2, i10.ɵAnimationEngine, i0.NgZone]), i0.ɵmpd(6144, i9.ɵSharedStylesHost, null, [i9.ɵDomSharedStylesHost]), i0.ɵmpd(4608, i0.Testability, i0.Testability, [i0.NgZone]), i0.ɵmpd(4608, i12.AnimationBuilder, i11.ɵBrowserAnimationBuilder, [i0.RendererFactory2, i6.DOCUMENT]), i0.ɵmpd(4608, i13.Overlay, i13.Overlay, [i13.ScrollStrategyOptions, i13.OverlayContainer, i0.ComponentFactoryResolver, i13.OverlayPositionBuilder, i13.OverlayKeyboardDispatcher, i0.Injector, i0.NgZone, i6.DOCUMENT, i14.Directionality, [2, i6.Location]]), i0.ɵmpd(5120, i13.ɵangular_material_src_cdk_overlay_overlay_c, i13.ɵangular_material_src_cdk_overlay_overlay_d, [i13.Overlay]), i0.ɵmpd(5120, i15.MAT_DIALOG_SCROLL_STRATEGY, i15.MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, [i13.Overlay]), i0.ɵmpd(135680, i15.MatDialog, i15.MatDialog, [i13.Overlay, i0.Injector, [2, i6.Location], [2, i15.MAT_DIALOG_DEFAULT_OPTIONS], i15.MAT_DIALOG_SCROLL_STRATEGY, [3, i15.MatDialog], i13.OverlayContainer]), i0.ɵmpd(4608, i16.MutationObserverFactory, i16.MutationObserverFactory, []), i0.ɵmpd(4608, i17.ErrorStateMatcher, i17.ErrorStateMatcher, []), i0.ɵmpd(4608, i18.AuthEffects, i18.AuthEffects, [i19.AUTH_RESET_ACTIONS, i19.AUTH_TRADUCTIONS, i0.PLATFORM_ID, i20.Actions, i21.AuthService, i22.Router, i23.ToastrService, i15.MatDialog, i24.Store]), i0.ɵmpd(4608, i25.AuthGuard, i25.AuthGuard, [i24.Store, i22.Router, i0.PLATFORM_ID]), i0.ɵmpd(1073742336, i6.CommonModule, i6.CommonModule, []), i0.ɵmpd(1073742336, i7.HttpClientXsrfModule, i7.HttpClientXsrfModule, []), i0.ɵmpd(1073742336, i7.HttpClientModule, i7.HttpClientModule, []), i0.ɵmpd(1073742336, i22.RouterModule, i22.RouterModule, [[2, i22.ɵangular_packages_router_router_a], [2, i22.Router]]), i0.ɵmpd(1073742336, i8.ɵangular_packages_forms_forms_d, i8.ɵangular_packages_forms_forms_d, []), i0.ɵmpd(1073742336, i8.ReactiveFormsModule, i8.ReactiveFormsModule, []), i0.ɵmpd(1024, i24.ɵngrx_modules_store_store_n, function () { return [{}]; }, []), i0.ɵmpd(1024, i24.STORE_FEATURES, function () { return [{ key: "auth", reducerFactory: i24.combineReducers, metaReducers: [], initialState: undefined }]; }, []), i0.ɵmpd(1024, i24.ɵngrx_modules_store_store_o, i24.ɵngrx_modules_store_store_u, [i0.Injector, i24.ɵngrx_modules_store_store_n, i24.STORE_FEATURES]), i0.ɵmpd(1024, i24.ɵngrx_modules_store_store_m, function () { return [i26.authReducer]; }, []), i0.ɵmpd(1024, i24.ɵngrx_modules_store_store_p, function (p0_0) { return [p0_0]; }, [i24.ɵngrx_modules_store_store_m]), i0.ɵmpd(1024, i24.FEATURE_REDUCERS, function (p0_0, p0_1, p0_2) { return [i24.ɵngrx_modules_store_store_v(p0_0, p0_1, p0_2)]; }, [i0.Injector, i24.ɵngrx_modules_store_store_m, i24.ɵngrx_modules_store_store_p]), i0.ɵmpd(1073873408, i24.StoreFeatureModule, i24.StoreFeatureModule, [i24.ɵngrx_modules_store_store_o, i24.FEATURE_REDUCERS, i24.ReducerManager, i24.StoreRootModule]), i0.ɵmpd(1024, i20.ɵngrx_modules_effects_effects_g, function () { return [[i18.AuthEffects]]; }, []), i0.ɵmpd(1024, i20.USER_PROVIDED_EFFECTS, function () { return [[]]; }, []), i0.ɵmpd(1024, i20.ɵngrx_modules_effects_effects_h, function (p0_0, p0_1, p0_2) { return [i20.ɵngrx_modules_effects_effects_b(p0_0, p0_1, p0_2)]; }, [i0.Injector, i20.ɵngrx_modules_effects_effects_g, i20.USER_PROVIDED_EFFECTS]), i0.ɵmpd(1073742336, i20.EffectsFeatureModule, i20.EffectsFeatureModule, [i20.EffectsRootModule, i20.ɵngrx_modules_effects_effects_h, [2, i24.StoreRootModule], [2, i24.StoreFeatureModule]]), i0.ɵmpd(1024, i0.ErrorHandler, i9.ɵangular_packages_platform_browser_platform_browser_a, []), i0.ɵmpd(1024, i0.APP_INITIALIZER, function (p0_0) { return [i9.ɵangular_packages_platform_browser_platform_browser_m(p0_0)]; }, [[2, i0.NgProbeToken]]), i0.ɵmpd(512, i0.ApplicationInitStatus, i0.ApplicationInitStatus, [[2, i0.APP_INITIALIZER]]), i0.ɵmpd(131584, i0.ApplicationRef, i0.ApplicationRef, [i0.NgZone, i0.ɵConsole, i0.Injector, i0.ErrorHandler, i0.ComponentFactoryResolver, i0.ApplicationInitStatus]), i0.ɵmpd(1073742336, i0.ApplicationModule, i0.ApplicationModule, [i0.ApplicationRef]), i0.ɵmpd(1073742336, i9.BrowserModule, i9.BrowserModule, [[3, i9.BrowserModule]]), i0.ɵmpd(1073742336, i11.BrowserAnimationsModule, i11.BrowserAnimationsModule, []), i0.ɵmpd(1073742336, i14.BidiModule, i14.BidiModule, []), i0.ɵmpd(1073742336, i17.MatCommonModule, i17.MatCommonModule, [i27.HighContrastModeDetector, [2, i17.MATERIAL_SANITY_CHECKS], [2, i6.DOCUMENT]]), i0.ɵmpd(1073742336, i28.MatCardModule, i28.MatCardModule, []), i0.ɵmpd(1073742336, i29.PortalModule, i29.PortalModule, []), i0.ɵmpd(1073742336, i30.PlatformModule, i30.PlatformModule, []), i0.ɵmpd(1073742336, i31.ScrollingModule, i31.ScrollingModule, []), i0.ɵmpd(1073742336, i13.OverlayModule, i13.OverlayModule, []), i0.ɵmpd(1073742336, i15.MatDialogModule, i15.MatDialogModule, []), i0.ɵmpd(1073742336, i17.MatRippleModule, i17.MatRippleModule, []), i0.ɵmpd(1073742336, i32.MatButtonModule, i32.MatButtonModule, []), i0.ɵmpd(1073742336, i33.TextFieldModule, i33.TextFieldModule, []), i0.ɵmpd(1073742336, i16.ObserversModule, i16.ObserversModule, []), i0.ɵmpd(1073742336, i34.MatFormFieldModule, i34.MatFormFieldModule, []), i0.ɵmpd(1073742336, i35.MatInputModule, i35.MatInputModule, []), i0.ɵmpd(1073742336, i36.MatProgressSpinnerModule, i36.MatProgressSpinnerModule, []), i0.ɵmpd(1073742336, i23.ToastrModule, i23.ToastrModule, []), i0.ɵmpd(1073742336, i1.AuthModule, i1.AuthModule, []), i0.ɵmpd(256, i7.ɵangular_packages_common_http_http_e, "XSRF-TOKEN", []), i0.ɵmpd(256, i7.ɵangular_packages_common_http_http_f, "X-XSRF-TOKEN", []), i0.ɵmpd(256, i0.DEFAULT_CURRENCY_CODE, i0.ɵangular_packages_core_core_u, []), i0.ɵmpd(256, i0.ɵINJECTOR_SCOPE, "root", []), i0.ɵmpd(256, i11.ANIMATION_MODULE_TYPE, "BrowserAnimations", []), i0.ɵmpd(256, i23.TOAST_CONFIG, { default: i23.DefaultGlobalConfig, config: { timeOut: 3000, positionClass: "toast-bottom-right", preventDuplicates: true } }, [])]); });
export { AuthModuleNgFactory as AuthModuleNgFactory };
//# sourceMappingURL=data:application/json;base64,